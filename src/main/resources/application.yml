server:
  port: 8080
  undertow:
    direct-buffers: true
    io-threads: 8
    worker-threads: 64 # io-threads * 8
    buffer-size: 1024
    accesslog:
      enabled: true

logging:
  name: snowman
  config: classpath:logback-spring.xml
  file:
    path: logs
  level:
    root: INFO
    org.hibernate: INFO
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    org.hibernate.type.descriptor.sql.BasicExtractor: TRACE
    cc.kevinlu.snow.server.data.mapper: INFO

spring:
  profiles:
    include: sharding
  application:
    name: snowman
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/snowman?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf-8&useSSL=true
    username: root
    password: root
    druid:
      # 初始连接数
      initialSize: 5
      # 最小连接池数量
      minIdle: 10
      # 最大连接池数量
      maxActive: 20
      # 配置获取连接等待超时的时间
      maxWait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 300000
      # 配置一个连接在池中最大生存的时间，单位是毫秒
      maxEvictableIdleTimeMillis: 900000
      # 配置检测连接是否有效
      validationQuery: SELECT 1 FROM DUAL
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      webStatFilter:
        enabled: true
      statViewServlet:
        enabled: true
        # 设置白名单，不填则允许所有访问
        allow:
        url-pattern: /monitor/druid/*
      filter:
        stat:
          enabled: true
          # 慢SQL记录
          log-slow-sql: true
          slow-sql-millis: 1000
          merge-sql: true
        wall:
          config:
            multi-statement-allow: true
  task:
    execution:
      thread-name-prefix: snowman-task-
      pool:
        core-size: 10
        max-size: 20
  redis:
    host: 127.0.0.1
    port: 6379
    redisson: classpath:redis/redisson-single-config.yml

snowman:
  transfer:
    table: sm_digit,sm_snowflake,sm_uuid,sm_timestamp