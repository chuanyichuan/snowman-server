<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cc.kevinlu.snow.server.data.mapper.DigitMapper">
  <resultMap id="BaseResultMap" type="cc.kevinlu.snow.server.data.model.DigitDO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="service_instance_id" jdbcType="BIGINT" property="serviceInstanceId" />
    <result column="chunk" jdbcType="INTEGER" property="chunk" />
    <result column="from_value" jdbcType="BIGINT" property="fromValue" />
    <result column="to_value" jdbcType="BIGINT" property="toValue" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="gmt_created" jdbcType="TIMESTAMP" property="gmtCreated" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, service_instance_id, chunk, from_value, to_value, status, gmt_created
  </sql>
  <select id="selectByExample" parameterType="cc.kevinlu.snow.server.data.model.DigitDOExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from sm_digit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sm_digit
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sm_digit
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cc.kevinlu.snow.server.data.model.DigitDOExample">
    delete from sm_digit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cc.kevinlu.snow.server.data.model.DigitDO">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sm_digit (service_instance_id, chunk, from_value, 
      to_value, status, gmt_created
      )
    values (#{serviceInstanceId,jdbcType=BIGINT}, #{chunk,jdbcType=INTEGER}, #{fromValue,jdbcType=BIGINT}, 
      #{toValue,jdbcType=BIGINT}, #{status,jdbcType=TINYINT}, #{gmtCreated,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="cc.kevinlu.snow.server.data.model.DigitDO">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sm_digit
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="serviceInstanceId != null">
        service_instance_id,
      </if>
      <if test="chunk != null">
        chunk,
      </if>
      <if test="fromValue != null">
        from_value,
      </if>
      <if test="toValue != null">
        to_value,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="gmtCreated != null">
        gmt_created,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="serviceInstanceId != null">
        #{serviceInstanceId,jdbcType=BIGINT},
      </if>
      <if test="chunk != null">
        #{chunk,jdbcType=INTEGER},
      </if>
      <if test="fromValue != null">
        #{fromValue,jdbcType=BIGINT},
      </if>
      <if test="toValue != null">
        #{toValue,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="gmtCreated != null">
        #{gmtCreated,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cc.kevinlu.snow.server.data.model.DigitDOExample" resultType="java.lang.Long">
    select count(*) from sm_digit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sm_digit
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.serviceInstanceId != null">
        service_instance_id = #{record.serviceInstanceId,jdbcType=BIGINT},
      </if>
      <if test="record.chunk != null">
        chunk = #{record.chunk,jdbcType=INTEGER},
      </if>
      <if test="record.fromValue != null">
        from_value = #{record.fromValue,jdbcType=BIGINT},
      </if>
      <if test="record.toValue != null">
        to_value = #{record.toValue,jdbcType=BIGINT},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.gmtCreated != null">
        gmt_created = #{record.gmtCreated,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sm_digit
    set id = #{record.id,jdbcType=BIGINT},
      service_instance_id = #{record.serviceInstanceId,jdbcType=BIGINT},
      chunk = #{record.chunk,jdbcType=INTEGER},
      from_value = #{record.fromValue,jdbcType=BIGINT},
      to_value = #{record.toValue,jdbcType=BIGINT},
      status = #{record.status,jdbcType=TINYINT},
      gmt_created = #{record.gmtCreated,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cc.kevinlu.snow.server.data.model.DigitDO">
    update sm_digit
    <set>
      <if test="serviceInstanceId != null">
        service_instance_id = #{serviceInstanceId,jdbcType=BIGINT},
      </if>
      <if test="chunk != null">
        chunk = #{chunk,jdbcType=INTEGER},
      </if>
      <if test="fromValue != null">
        from_value = #{fromValue,jdbcType=BIGINT},
      </if>
      <if test="toValue != null">
        to_value = #{toValue,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="gmtCreated != null">
        gmt_created = #{gmtCreated,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cc.kevinlu.snow.server.data.model.DigitDO">
    update sm_digit
    set service_instance_id = #{serviceInstanceId,jdbcType=BIGINT},
      chunk = #{chunk,jdbcType=INTEGER},
      from_value = #{fromValue,jdbcType=BIGINT},
      to_value = #{toValue,jdbcType=BIGINT},
      status = #{status,jdbcType=TINYINT},
      gmt_created = #{gmtCreated,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>